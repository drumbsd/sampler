runcharts:
  - title: Search engine response time
    position: [[0, 0], [45, 19]]
    rate-ms: 500
    triggers:
      - title: Latency threshold exceeded
        condition: echo "$prev < 0.8 && $cur > 0.8" |bc -l
        actions:
            terminal-bell: true
            sound: true
            visual: true
            script: 'say alert: ${label} latency exceeded ${cur} second'
    legend:
        enabled: true
        details: false
    scale: 2
    items:
      - label: GOOGLE
        color: 178
        sample: curl -o /dev/null -s -w '%{time_total}'  https://www.google.com
      - label: YAHOO
        sample: curl -o /dev/null -s -w '%{time_total}'  https://search.yahoo.com
      - label: BING
        sample: curl -o /dev/null -s -w '%{time_total}'  https://www.bing.com
barcharts:
  - title: Local network activity
    position: [[45, 19], [35, 8]]
    rate-ms: 1000
    scale: 0
    items:
      - label: Network traffic
        sample: iftop -t -B -b -s 1 -L 1 -n | grep "Total send and receive rate" |
            awk -F " " '{print $6}' | awk '/[0-9]$/{print $1;next};/[M]$/{printf "%u\n",
            $1*(1024*1024);next};/[K]$/{printf "%u\n", $1*1024;next};/[B]$/{printf
            "%u\n",$1;next}'
gauges:
  - title: YEAR PROGRESS
    position: [[45, 0], [35, 2]]
    cur:
        sample: date +%j
    max:
        sample: echo 365
    min:
        sample: echo 0
  - title: DAY PROGRESS
    position: [[45, 3], [35, 2]]
    cur:
        sample: date +%H
    max:
        sample: echo 24
    min:
        sample: echo 0
  - title: HOUR PROGRESS
    position: [[45, 6], [35, 2]]
    cur:
        sample: date +%M
    max:
        sample: echo 60
    min:
        sample: echo 0
  - title: MINUTE PROGRESS
    position: [[45, 9], [35, 2]]
    triggers:
      - title: CLOCK BELL EVERY MINUTE
        condition: '[ $label == "cur" ] && [ $cur -eq 0 ] && echo 1 || echo 0'
        actions:
            sound: true
            script: say -v samantha `date +%I:%M%p`
    cur:
        sample: date +%S
    max:
        sample: echo 60
    min:
        sample: echo 0
sparklines:
  - title: CPU usage
    position: [[0, 19], [22, 8]]
    rate-ms: 200
    scale: 0
    sample: ps -A -o %cpu | awk '{s+=$1} END {print s}'
  - title: Free memory pages
    position: [[22, 19], [23, 8]]
    rate-ms: 200
    scale: 2
    sample: top -d1 | grep Memory | awk -F " " '{print $6}' | awk '/[0-9]$/{print
        $1;next};/[mMbB]$/{printf "%u\n", $1*(1024*1024);next};/[kbKB]$/{printf "%u\n",
        $1*1024;next}'
textboxes:
  - title: Uptime
    position: [[45, 27], [35, 4]]
    rate-ms: 1000
    sample: uptime
    border: true
  - title: Top
    position: [[0, 27], [45, 14]]
    sample: top
    border: true
  - title: Operating System
    position: [[45, 31], [35, 10]]
    sample: figlet OpenBSD 6.6
    border: true
asciiboxes:
  - title: UTC time
    position: [[45, 12], [35, 7]]
    rate-ms: 500
    sample: env TZ=UTC date +%r
    border: false
    font: 2d
